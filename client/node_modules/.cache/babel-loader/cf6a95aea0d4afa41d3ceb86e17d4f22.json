{"ast":null,"code":"var _jsxFileName = \"/Users/files/react_learning/projects/root/smcovered/client/src/components/App.js\";\nimport React, { useEffect } from 'react';\nimport axios from '../apis/smCovered';\nimport { connect } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { UNKNOW_USER } from '../actions/types';\nimport Login from './auth/Login';\nimport Theme from './ui/Theme';\nimport Alert from './ui/Alert';\nimport { loadUser } from '../actions/auth';\nimport setAuthToken from '../utils/setAuthToken';\nimport AmbassadorQuery from './ambassador/query';\nimport Admin from './admin/dashbord';\nimport CreateAmbass from './admin/CreateAmbass'; // Redux\n// import { Provider } from 'react-redux';\n\nimport store from '../store';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token, 'use axios setAuth from render App');\n}\n\nconst App = props => {\n  //@yuchen \n  useEffect(() => {\n    const temp = async () => {\n      try {\n        axios.defaults.headers.common['x-auth-token'] = local.storage.axios.get('/api/auth').then(e => {\n          e.data.msg === 'authenticated' ? store.dispatch(loadUser()) : store.dispatch({\n            type: UNKNOW_USER,\n            payload: 'unAuthorized'\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    temp();\n  }, [props.isAuthenticated]); // @yuchen 是不是可以在这里加dependency这样来进行渲染\n\n  return (\n    /*#__PURE__*/\n    // @yuchen 我不知道为啥不能用segment\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: Theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/ambassador\",\n      component: AmbassadorQuery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/admin\",\n      component: Admin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }), \"               \", /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/admin/create\",\n      component: CreateAmbass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    })))))\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  }; // @yuchen 我没看第一次初始化redux store是什么时候\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/files/react_learning/projects/root/smcovered/client/src/components/App.js"],"names":["React","useEffect","axios","connect","ThemeProvider","BrowserRouter","Router","Route","Switch","UNKNOW_USER","Login","Theme","Alert","loadUser","setAuthToken","AmbassadorQuery","Admin","CreateAmbass","store","localStorage","token","App","props","temp","defaults","headers","common","local","storage","get","then","e","data","msg","dispatch","type","payload","error","console","log","isAuthenticated","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport axios from '../apis/smCovered'\nimport { connect } from 'react-redux'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { UNKNOW_USER } from '../actions/types'\n\nimport Login from './auth/Login';\nimport Theme from './ui/Theme';\nimport Alert from './ui/Alert';\nimport { loadUser } from '../actions/auth';\nimport setAuthToken from '../utils/setAuthToken';\nimport AmbassadorQuery from './ambassador/query';\nimport Admin from './admin/dashbord';\nimport CreateAmbass from './admin/CreateAmbass'\n\n// Redux\n// import { Provider } from 'react-redux';\nimport store from '../store'\n\nif (localStorage.token) {\n\n\tsetAuthToken(localStorage.token, 'use axios setAuth from render App')\n}\n\nconst App = (props) => {                                             //@yuchen \n\tuseEffect(() => {\n\t\tconst temp = async () => {\n\t\t\ttry {\n\t\t\t\taxios.defaults.headers.common['x-auth-token'] = local.storage.\n\t\t\t\taxios.get('/api/auth').then((e) => {\n\t\t\t\t\te.data.msg === 'authenticated' ?\n\t\t\t\t\t\tstore.dispatch(loadUser()) :\n\t\t\t\t\t\tstore.dispatch({ type: UNKNOW_USER, payload: 'unAuthorized' })\n\t\t\t\t})\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error)\n\t\t\t}\n\t\t}\n\t\ttemp()\n\t}, [props.isAuthenticated])                               // @yuchen 是不是可以在这里加dependency这样来进行渲染\n\n\treturn (                                                          // @yuchen 我不知道为啥不能用segment\n\t\t<div>\n\t\t\t<ThemeProvider theme={Theme}>\n\t\t\t\t<Router>\n\t\t\t\t\t<Alert />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/' component={Login} />  \n\t\t\t\t\t\t<Route exact path='/login' component={Login} />\n\t\t\t\t\t\t<Route exact path='/ambassador' component={AmbassadorQuery} />\n\t\t\t\t\t\t<Route exact path='/admin' component={Admin} />\n\t\t\t\t\t\t<Route exact path='/signup' />               {/* @yuchen use later */}\n\t\t\t\t\t\t<Route exact path='/admin/create' component={CreateAmbass} />    \n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</ThemeProvider>\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n\treturn ({ isAuthenticated: state.auth.isAuthenticated })         // @yuchen 我没看第一次初始化redux store是什么时候\n}\n\nexport default connect(mapStateToProps)(App)\n"]},"metadata":{},"sourceType":"module"}