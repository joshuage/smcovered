{"ast":null,"code":"var _jsxFileName = \"/Users/files/react_learning/projects/root/smcovered/client/src/components/App.js\";\nimport React, { useEffect } from 'react';\nimport axios from '../apis/smCovered';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './auth/Login';\nimport Theme from './ui/Theme';\nimport Alert from './ui/Alert';\nimport { loadUser } from '../actions/auth';\nimport setAuthToken from '../utils/setAuthToken';\nimport AmbassadorQuery from './ambassador/query';\nimport Admin from './admin/dashbord'; // Redux\n\nimport { Provider } from 'react-redux';\nimport store from '../store';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    const temp = async () => {\n      try {\n        if (axios.get('/api/auth')) console.log(res); //store.dispatch(loadUser())\n      } catch (error) {\n        console.log(error); // console.log('do other things instead')   //@yuchen 我觉得这样的逻辑稍好一点\n\n        store.dispatch({\n          type: ''\n        });\n      }\n    };\n\n    temp(); // } else {\n    // \tstore.dispatch(loadUser())\n    // }\n    // store.dispatch(loadUser());\n  }, []);\n  return /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: Theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/ambassador\",\n    component: AmbassadorQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/admin\",\n    component: Admin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/files/react_learning/projects/root/smcovered/client/src/components/App.js"],"names":["React","useEffect","axios","ThemeProvider","BrowserRouter","Router","Route","Switch","Login","Theme","Alert","loadUser","setAuthToken","AmbassadorQuery","Admin","Provider","store","localStorage","token","App","temp","get","console","log","res","error","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AAEA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,KAAP,MAAkB,kBAAlB,C,CAEA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,IAAIC,YAAY,CAACC,KAAjB,EAAwB;AACvBN,EAAAA,YAAY,CAACK,YAAY,CAACC,KAAd,CAAZ;AACA;;AAED,MAAMC,GAAG,GAAG,MAAM;AACjBlB,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMmB,IAAI,GAAG,YAAY;AACxB,UAAI;AACH,YAAIlB,KAAK,CAACmB,GAAN,CAAU,WAAV,CAAJ,EACAC,OAAO,CAACC,GAAR,CAAYC,GAAZ,EAFG,CAGH;AACA,OAJD,CAIE,OAAOC,KAAP,EAAc;AACfH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EADe,CAEf;;AACAT,QAAAA,KAAK,CAACU,QAAN,CAAe;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAf;AACA;AACD,KAVD;;AAYAP,IAAAA,IAAI,GAbW,CAgBf;AACA;AACA;AACA;AACA,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACC,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEP,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAED,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEA,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAGC,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,aAAlB;AAAgC,IAAA,SAAS,EAAEK,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,eAIC,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,CAFD,CADD,CADD,CADD;AAeA,CAtCD;;AAwCA,eAAeK,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport axios from '../apis/smCovered'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Login from './auth/Login';\nimport Theme from './ui/Theme';\nimport Alert from './ui/Alert';\nimport { loadUser } from '../actions/auth';\nimport setAuthToken from '../utils/setAuthToken';\nimport AmbassadorQuery from './ambassador/query';\nimport Admin from './admin/dashbord';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from '../store'\n\nif (localStorage.token) {\n\tsetAuthToken(localStorage.token);\n}\n\nconst App = () => {\n\tuseEffect(() => {\n\t\tconst temp = async () => {\n\t\t\ttry {\n\t\t\t\tif (axios.get('/api/auth'))\n\t\t\t\tconsole.log(res)\n\t\t\t\t//store.dispatch(loadUser())\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error)\t\t\t\t\t\t\t\n\t\t\t\t// console.log('do other things instead')   //@yuchen 我觉得这样的逻辑稍好一点\n\t\t\t\tstore.dispatch({type: ''})\n\t\t\t}\n\t\t}\n\n\t\ttemp()\n\t\t\n\n\t\t// } else {\n\t\t// \tstore.dispatch(loadUser())\n\t\t// }\n\t\t// store.dispatch(loadUser());\n\t}, [])\n\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<ThemeProvider theme={Theme}>\n\t\t\t\t<Router>\n\t\t\t\t\t<Alert />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/' component={Login} />\n\t\t\t\t\t\t<Route exact path='/login' component={Login} />\n\t\t\t\t\t\t<Route exact path='/ambassador' component={AmbassadorQuery} />\n\t\t\t\t\t\t<Route exact path='/admin' component={Admin} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</ThemeProvider>\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}